# Generated by Django 5.1.4 on 2025-08-11 01:15

import django.contrib.postgres.fields
import django.db.models.deletion
import imagekit.models.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('universities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RoommateMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility_score', models.DecimalField(decimal_places=2, help_text='Percentage of compatibility', max_digits=5)),
                ('message', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_from', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roommate_matches_sent', to=settings.AUTH_USER_MODEL)),
                ('user_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roommate_matches_received', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Roommate Match',
                'verbose_name_plural': 'Roommate Matches',
                'unique_together': {('user_from', 'user_to')},
            },
        ),
        migrations.CreateModel(
            name='MatchAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compatibility_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('factor_scores', models.JSONField()),
                ('user_feedback', models.IntegerField(blank=True, choices=[(1, 'Poor'), (2, 'Fair'), (3, 'Good'), (4, 'Great'), (5, 'Perfect')], null=True)),
                ('match_outcome', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined'), ('successful', 'Living Together'), ('unsuccessful', 'Did Not Work Out')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roommates.roommatematch')),
            ],
            options={
                'verbose_name': 'Match Analytics',
                'verbose_name_plural': 'Match Analytics',
            },
        ),
        migrations.CreateModel(
            name='RoommateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sleep_schedule', models.CharField(blank=True, choices=[('early_bird', 'Early Bird (Before 10 PM)'), ('night_owl', 'Night Owl (After midnight)'), ('average', 'Average (10PM - Midnight)')], max_length=20, null=True)),
                ('cleanliness', models.IntegerField(blank=True, choices=[(1, 'Very Messy'), (2, 'Somewhat Messy'), (3, 'Average'), (4, 'Clean'), (5, 'Very Clean')], null=True)),
                ('noise_tolerance', models.IntegerField(blank=True, choices=[(1, 'Very Low - Need complete silence'), (2, 'Low - Prefer quiet'), (3, 'Medium - Some noise is OK'), (4, "High - Don't mind noise"), (5, 'Very High - Love activity')], null=True)),
                ('guest_policy', models.CharField(blank=True, choices=[('rarely', 'Rarely have guests'), ('occasionally', 'Occasionally have guests'), ('frequently', 'Frequently have guests')], max_length=20, null=True)),
                ('study_habits', models.CharField(blank=True, choices=[('at_home', 'Study at Home'), ('library', 'Library/Campus'), ('flexible', 'Flexible - Either works for me')], max_length=20, null=True)),
                ('nickname', models.CharField(blank=True, max_length=30)),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('year', models.PositiveIntegerField(blank=True, help_text='Academic year (1-5)', null=True)),
                ('budget_min', models.PositiveIntegerField(default=0, help_text='Minimum monthly budget in MXN')),
                ('budget_max', models.PositiveIntegerField(default=10000, help_text='Maximum monthly budget in MXN')),
                ('move_in_date', models.DateField(blank=True, help_text='Preferred move-in date', null=True)),
                ('lease_duration', models.CharField(blank=True, choices=[('1_month', '1 Month'), ('3_months', '3 Months'), ('6_months', '6 Months'), ('12_months', '12 Months'), ('flexible', 'Flexible')], default='12_months', max_length=20)),
                ('housing_type', models.CharField(blank=True, choices=[('apartment', 'Apartment'), ('house', 'House'), ('studio', 'Studio'), ('dorm', 'Dorm'), ('shared', 'Shared Room')], default='apartment', max_length=20)),
                ('hobbies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
                ('social_activities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
                ('pet_friendly', models.BooleanField(default=False)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('dietary_restrictions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, size=None)),
                ('deal_breakers', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('no_smoking', 'No smoking'), ('no_pets', 'No pets'), ('same_gender_only', 'Same gender only'), ('quiet_study_required', 'Quiet study environment required'), ('no_overnight_guests', 'No overnight guests'), ('no_late_rent', 'No late rent'), ('no_messy_common_areas', 'No messy common areas'), ('no_loud_music', 'No loud music'), ('no_different_sleep_schedules', 'No different sleep schedules'), ('cleaning_schedule_required', 'Cleaning schedule required'), ('no_substance_use', 'No substance use'), ('compatible_diets_required', 'Compatible diets required')], max_length=50), blank=True, default=list, help_text='Non-negotiable requirements', size=None)),
                ('personality', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='Personality traits', size=None)),
                ('shared_interests', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text='Interests to share with roommates', size=None)),
                ('preferred_roommate_gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('no_preference', 'No Preference')], default='no_preference', max_length=20)),
                ('age_range_min', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('age_range_max', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('preferred_roommate_count', models.PositiveSmallIntegerField(default=1)),
                ('profile_visible_to', models.CharField(choices=[('everyone', 'Everyone'), ('verified_only', 'Verified Users Only'), ('university_only', 'Same University Only')], default='everyone', help_text='Who can see your full profile', max_length=20)),
                ('contact_visible_to', models.CharField(choices=[('everyone', 'Everyone'), ('matches_only', 'Matches Only'), ('nobody', 'Nobody')], default='matches_only', max_length=20)),
                ('images_visible_to', models.CharField(choices=[('everyone', 'Everyone'), ('matches_only', 'Matches Only'), ('connected_only', 'Connected Users Only')], default='everyone', help_text='Who can see your profile images', max_length=20)),
                ('onboarding_completed', models.BooleanField(default=False, help_text='Has user completed initial profile setup')),
                ('completion_percentage', models.IntegerField(db_index=True, default=0)),
                ('last_match_calculation', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='roommate_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Roommate Profile',
                'verbose_name_plural': 'Roommate Profiles',
            },
        ),
        migrations.CreateModel(
            name='RoommateProfileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', imagekit.models.fields.ProcessedImageField(help_text='Recommended size: 800x800px, Max file size: 5MB', upload_to='roommate_images/%Y/%m/')),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_approved', models.BooleanField(default=True, help_text='Set to False if reported/under review')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='roommates.roommateprofile')),
            ],
            options={
                'verbose_name': 'Roommate Profile Image',
                'verbose_name_plural': 'Roommate Profile Images',
                'ordering': ['order', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ImageReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('inappropriate', 'Inappropriate content'), ('fake', 'Fake or misleading'), ('offensive', 'Offensive content'), ('spam', 'Spam or advertisement'), ('other', 'Other')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='roommates.roommateprofileimage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RoommateRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('preferred_areas', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, size=None)),
                ('budget_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('budget_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('move_in_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('fulfilled', 'Fulfilled'), ('closed', 'Closed')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('university', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='universities.university')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roommate_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Roommate Request',
                'verbose_name_plural': 'Roommate Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='roommateprofile',
            index=models.Index(fields=['sleep_schedule', 'cleanliness'], name='roommates_r_sleep_s_d28b7f_idx'),
        ),
        migrations.AddIndex(
            model_name='roommateprofile',
            index=models.Index(fields=['user'], name='roommates_r_user_id_1637d3_idx'),
        ),
        migrations.AddIndex(
            model_name='roommateprofile',
            index=models.Index(fields=['-updated_at'], name='roommates_r_updated_e7133c_idx'),
        ),
        migrations.AddIndex(
            model_name='roommateprofile',
            index=models.Index(fields=['completion_percentage', '-updated_at'], name='roommates_r_complet_790004_idx'),
        ),
        migrations.AddIndex(
            model_name='roommateprofile',
            index=models.Index(fields=['-created_at'], name='roommates_r_created_fbb4b1_idx'),
        ),
        migrations.AddIndex(
            model_name='roommateprofileimage',
            index=models.Index(fields=['profile', 'is_primary'], name='roommates_r_profile_4bf01d_idx'),
        ),
        migrations.AddIndex(
            model_name='roommateprofileimage',
            index=models.Index(fields=['profile', 'order'], name='roommates_r_profile_72b192_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='imagereport',
            unique_together={('image', 'reported_by')},
        ),
    ]
