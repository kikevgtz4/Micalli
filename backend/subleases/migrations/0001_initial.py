# Generated by Django 5.2.1 on 2025-08-10 06:30

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('universities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Sublease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('listing_type', models.CharField(choices=[('summer', 'Summer Sublease'), ('semester', 'Semester Sublease'), ('temporary', 'Temporary Sublease'), ('takeover', 'Lease Takeover')], max_length=20)),
                ('sublease_type', models.CharField(choices=[('entire_place', 'Entire Place'), ('private_room', 'Private Room'), ('shared_room', 'Shared Room')], max_length=20)),
                ('property_type', models.CharField(choices=[('apartment', 'Apartment'), ('house', 'House'), ('studio', 'Studio'), ('dorm', 'Dormitory'), ('condo', 'Condominium')], default='apartment', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('is_flexible', models.BooleanField(default=False)),
                ('flexibility_range_days', models.PositiveIntegerField(default=7, help_text='How many days flexible on start/end dates', validators=[django.core.validators.MaxValueValidator(30)])),
                ('available_immediately', models.BooleanField(default=False)),
                ('address', models.CharField(max_length=255)),
                ('display_neighborhood', models.CharField(max_length=100)),
                ('display_area', models.CharField(max_length=100)),
                ('city', models.CharField(default='Monterrey', max_length=100)),
                ('state', models.CharField(default='Nuevo Le√≥n', max_length=100)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('approx_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('approx_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('privacy_radius', models.IntegerField(default=250)),
                ('original_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sublease_rent', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deposit_required', models.BooleanField(default=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('utilities_included', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=50), blank=True, default=list, help_text='e.g., water, electricity, internet, gas', size=None)),
                ('additional_fees', models.JSONField(blank=True, default=dict, help_text='Any additional fees like parking, maintenance, etc.')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('bedrooms', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bathrooms', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('total_area', models.DecimalField(blank=True, decimal_places=2, help_text='Area in square meters', max_digits=8, null=True)),
                ('furnished', models.BooleanField(default=False)),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='e.g., parking, gym, pool, laundry', size=None)),
                ('total_roommates', models.PositiveSmallIntegerField(blank=True, help_text='Total number of people living in the space', null=True)),
                ('current_roommates', models.PositiveSmallIntegerField(blank=True, help_text='Number of current roommates', null=True)),
                ('roommate_genders', models.CharField(choices=[('all_male', 'All Male'), ('all_female', 'All Female'), ('mixed', 'Mixed'), ('prefer_not_say', 'Prefer Not to Say')], default='prefer_not_say', max_length=20)),
                ('roommate_description', models.TextField(blank=True, help_text='Description of current roommates, their schedules, habits, etc.')),
                ('shared_spaces', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, default=list, help_text='e.g., kitchen, living room, bathroom', size=None)),
                ('landlord_consent_status', models.CharField(choices=[('not_required', 'Not Required'), ('confirmed', 'Confirmed by User'), ('documented', 'Documentation Uploaded'), ('verified', 'Verified by Admin')], default='not_required', max_length=20)),
                ('landlord_consent_document', models.FileField(blank=True, help_text='Optional: Upload landlord consent documentation', null=True, upload_to='sublease_consent/')),
                ('lease_transfer_allowed', models.BooleanField(default=False, help_text="Can the lease be transferred to subletter's name?")),
                ('sublease_agreement_required', models.BooleanField(default=True, help_text='Will you require a sublease agreement?')),
                ('disclaimers_accepted', models.BooleanField(default=False)),
                ('disclaimers_accepted_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('pending', 'Pending'), ('filled', 'Filled'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('urgency_level', models.CharField(choices=[('low', 'Low - Flexible Timeline'), ('medium', 'Medium - Within 30 days'), ('high', 'High - Within 2 weeks'), ('urgent', 'Urgent - ASAP')], default='medium', max_length=20)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('saved_count', models.PositiveIntegerField(default=0)),
                ('inquiry_count', models.PositiveIntegerField(default=0)),
                ('pet_friendly', models.BooleanField(default=False)),
                ('smoking_allowed', models.BooleanField(default=False)),
                ('requirements', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=200), blank=True, default=list, help_text="e.g., 'No parties', 'Quiet after 10pm', 'Clean shared spaces'", size=None)),
                ('preferred_tenant', models.TextField(blank=True, help_text='Describe your ideal subletter')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subleases', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subleases_verified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sublease',
                'verbose_name_plural': 'Subleases',
                'ordering': ['-urgency_level', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubleaseApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('move_in_date', models.DateField()),
                ('message', models.TextField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('occupation', models.CharField(blank=True, max_length=100)),
                ('references_available', models.BooleanField(default=False)),
                ('has_pets', models.BooleanField(default=False)),
                ('pet_details', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('reviewing', 'Under Review'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sublease_applications', to=settings.AUTH_USER_MODEL)),
                ('sublease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='subleases.sublease')),
            ],
            options={
                'verbose_name': 'Sublease Application',
                'verbose_name_plural': 'Sublease Applications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubleaseImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='sublease_images/')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='sublease_thumbnails/')),
                ('is_main', models.BooleanField(default=False)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('order', models.PositiveSmallIntegerField(default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('sublease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='subleases.sublease')),
            ],
            options={
                'verbose_name': 'Sublease Image',
                'verbose_name_plural': 'Sublease Images',
                'ordering': ['order', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='SubleaseSave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('sublease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saves', to='subleases.sublease')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_subleases', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Saved Sublease',
                'verbose_name_plural': 'Saved Subleases',
                'ordering': ['-saved_at'],
            },
        ),
        migrations.CreateModel(
            name='SubleaseUniversityProximity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_in_meters', models.PositiveIntegerField(help_text='Distance in meters')),
                ('walking_time_minutes', models.PositiveIntegerField(help_text='Estimated walking time in minutes')),
                ('public_transport_time_minutes', models.PositiveIntegerField(blank=True, help_text='Estimated public transport time in minutes', null=True)),
                ('sublease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='university_proximities', to='subleases.sublease')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sublease_proximities', to='universities.university')),
            ],
            options={
                'verbose_name': 'Sublease University Proximity',
                'verbose_name_plural': 'Sublease University Proximities',
                'ordering': ['distance_in_meters'],
            },
        ),
        migrations.CreateModel(
            name='SubleaseVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('lease', 'Original Lease Agreement'), ('consent', 'Landlord Consent Form'), ('id', 'Photo ID'), ('utility', 'Utility Bill'), ('other', 'Other Document')], max_length=20)),
                ('document', models.FileField(upload_to='sublease_verifications/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('sublease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='subleases.sublease')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sublease_verifications_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sublease Verification',
                'verbose_name_plural': 'Sublease Verifications',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddIndex(
            model_name='sublease',
            index=models.Index(fields=['status', 'urgency_level'], name='subleases_s_status_38b0e9_idx'),
        ),
        migrations.AddIndex(
            model_name='sublease',
            index=models.Index(fields=['start_date', 'end_date'], name='subleases_s_start_d_40eb41_idx'),
        ),
        migrations.AddIndex(
            model_name='sublease',
            index=models.Index(fields=['user', 'status'], name='subleases_s_user_id_00fe88_idx'),
        ),
        migrations.AddIndex(
            model_name='sublease',
            index=models.Index(fields=['sublease_type', 'status'], name='subleases_s_subleas_fe3d39_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subleaseapplication',
            unique_together={('sublease', 'applicant')},
        ),
        migrations.AlterUniqueTogether(
            name='subleasesave',
            unique_together={('user', 'sublease')},
        ),
        migrations.AlterUniqueTogether(
            name='subleaseuniversityproximity',
            unique_together={('sublease', 'university')},
        ),
    ]
