# Generated by Django 5.2.1 on 2025-07-08 05:55

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('messaging', '0001_initial'),
        ('properties', '0005_alter_property_privacy_radius'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam or Advertising'), ('contact_info', 'Sharing Contact Information'), ('payment_circumvention', 'Attempting to Bypass Platform'), ('inappropriate', 'Inappropriate Content'), ('harassment', 'Harassment or Abuse'), ('scam', 'Potential Scam'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('reviewing', 'Under Review'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], db_index=True, default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('action_taken', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Conversation Flag',
                'verbose_name_plural': 'Conversation Flags',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type', models.CharField(choices=[('initial_inquiry', 'Initial Property Inquiry'), ('ask_amenities', 'Ask About Amenities'), ('ask_availability', 'Check Availability'), ('ask_requirements', 'Ask About Requirements'), ('ask_neighborhood', 'Ask About Neighborhood'), ('ask_utilities', 'Ask About Utilities'), ('roommate_introduction', 'Roommate Introduction')], max_length=30, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('title_es', models.CharField(blank=True, help_text='Spanish translation', max_length=100)),
                ('content', models.TextField(help_text='Use placeholders like {property_title}, {user_name}, {move_in_date}, etc.')),
                ('content_es', models.TextField(blank=True, help_text='Spanish translation')),
                ('variables', models.JSONField(default=list, help_text='List of variable names used in template')),
                ('show_for_property_types', models.JSONField(blank=True, default=list, help_text='Property types this template is relevant for')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Message Template',
                'verbose_name_plural': 'Message Templates',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.RemoveField(
            model_name='viewingrequest',
            name='conversation',
        ),
        migrations.RemoveField(
            model_name='viewingrequest',
            name='property',
        ),
        migrations.RemoveField(
            model_name='viewingrequest',
            name='requester',
        ),
        migrations.AlterModelOptions(
            name='conversation',
            options={'ordering': ['-updated_at'], 'verbose_name': 'Conversation', 'verbose_name_plural': 'Conversations'},
        ),
        migrations.AddField(
            model_name='conversation',
            name='conversation_type',
            field=models.CharField(choices=[('general', 'General'), ('property_inquiry', 'Property Inquiry'), ('application', 'Application'), ('roommate_inquiry', 'Roommate Inquiry')], default='general', max_length=20),
        ),
        migrations.AddField(
            model_name='conversation',
            name='flag_reason',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='flagged_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='has_flagged_content',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='conversation',
            name='initial_message_template',
            field=models.CharField(blank=True, help_text='Template used for initial contact', max_length=50),
        ),
        migrations.AddField(
            model_name='conversation',
            name='owner_response_time',
            field=models.DurationField(blank=True, help_text='Time taken for property owner to respond', null=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('pending_response', 'Pending Response'), ('pending_application', 'Pending Application'), ('application_submitted', 'Application Submitted'), ('booking_confirmed', 'Booking Confirmed'), ('archived', 'Archived'), ('flagged', 'Flagged for Review')], default='active', max_length=25),
        ),
        migrations.AddField(
            model_name='message',
            name='filter_warnings',
            field=models.JSONField(blank=True, default=list),
        ),
        migrations.AddField(
            model_name='message',
            name='filtered_content',
            field=models.TextField(blank=True, help_text='Content after applying filters (if different from original)'),
        ),
        migrations.AddField(
            model_name='message',
            name='has_filtered_content',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='message',
            name='is_system_message',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='message',
            name='message_type',
            field=models.CharField(choices=[('text', 'Text Message'), ('inquiry', 'Property Inquiry'), ('document_share', 'Document Share'), ('application_update', 'Application Update'), ('system', 'System Message')], default='text', max_length=20),
        ),
        migrations.AddField(
            model_name='message',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='Store structured data like move-in date, duration, etc.'),
        ),
        migrations.AlterField(
            model_name='message',
            name='attachment',
            field=models.FileField(blank=True, null=True, upload_to='message_attachments/%Y/%m/'),
        ),
        migrations.AlterField(
            model_name='message',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, db_index=True),
        ),
        migrations.AlterField(
            model_name='message',
            name='read',
            field=models.BooleanField(db_index=True, default=False),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['-updated_at'], name='messaging_c_updated_666ea9_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['property', 'status'], name='messaging_c_propert_4c902c_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messaging_m_convers_7bc91b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', '-created_at'], name='messaging_m_sender__9b0bb2_idx'),
        ),
        migrations.AddField(
            model_name='conversationflag',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='messaging.conversation'),
        ),
        migrations.AddField(
            model_name='conversationflag',
            name='flagged_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_flags_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='conversationflag',
            name='message',
            field=models.ForeignKey(blank=True, help_text='Specific message that triggered the flag', null=True, on_delete=django.db.models.deletion.CASCADE, to='messaging.message'),
        ),
        migrations.AddField(
            model_name='conversationflag',
            name='reviewed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversation_flags_reviewed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='messagetemplate',
            index=models.Index(fields=['is_active', 'order'], name='messaging_m_is_acti_3c19dc_idx'),
        ),
        migrations.DeleteModel(
            name='ViewingRequest',
        ),
        migrations.AddIndex(
            model_name='conversationflag',
            index=models.Index(fields=['status', '-created_at'], name='messaging_c_status_987cbe_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationflag',
            index=models.Index(fields=['conversation', 'status'], name='messaging_c_convers_95de24_idx'),
        ),
    ]
