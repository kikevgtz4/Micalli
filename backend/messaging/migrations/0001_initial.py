# Generated by Django 5.1.4 on 2025-08-11 01:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0001_initial'),
        ('subleases', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conversation_type', models.CharField(choices=[('general', 'General'), ('property_inquiry', 'Property Inquiry'), ('sublease_inquiry', 'Sublease Inquiry'), ('application', 'Application'), ('roommate_inquiry', 'Roommate Inquiry')], default='general', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('pending_response', 'Pending Response'), ('pending_application', 'Pending Application'), ('application_submitted', 'Application Submitted'), ('booking_confirmed', 'Booking Confirmed'), ('archived', 'Archived'), ('flagged', 'Flagged for Review')], default='active', max_length=25)),
                ('initial_message_template', models.CharField(blank=True, help_text='Template used for initial contact', max_length=50)),
                ('owner_response_time', models.DurationField(blank=True, help_text='Time taken for property owner to respond', null=True)),
                ('has_flagged_content', models.BooleanField(default=False)),
                ('flagged_at', models.DateTimeField(blank=True, null=True)),
                ('flag_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('participants', models.ManyToManyField(related_name='conversations', to=settings.AUTH_USER_MODEL)),
                ('property', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='properties.property')),
                ('sublease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations', to='subleases.sublease')),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('delivered', models.BooleanField(db_index=True, default=False)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read', models.BooleanField(db_index=True, default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('inquiry', 'Property Inquiry'), ('document_share', 'Document Share'), ('application_update', 'Application Update'), ('system', 'System Message')], default='text', max_length=20)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Store structured data like move-in date, duration, etc.')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='message_attachments/%Y/%m/')),
                ('attachment_type', models.CharField(blank=True, max_length=50)),
                ('filtered_content', models.TextField(blank=True, help_text='Content after applying filters (if different from original)')),
                ('has_filtered_content', models.BooleanField(default=False)),
                ('filter_warnings', models.JSONField(blank=True, default=list)),
                ('is_system_message', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('delivery_attempts', models.IntegerField(default=0)),
                ('last_delivery_attempt', models.DateTimeField(blank=True, null=True)),
                ('delivery_status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('expired', 'Expired')], db_index=True, default='pending', max_length=20)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='messaging.conversation')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam or Advertising'), ('contact_info', 'Sharing Contact Information'), ('payment_circumvention', 'Attempting to Bypass Platform'), ('inappropriate', 'Inappropriate Content'), ('harassment', 'Harassment or Abuse'), ('scam', 'Potential Scam'), ('other', 'Other')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('reviewing', 'Under Review'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], db_index=True, default='pending', max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True)),
                ('action_taken', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flags', to='messaging.conversation')),
                ('flagged_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation_flags_created', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversation_flags_reviewed', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(blank=True, help_text='Specific message that triggered the flag', null=True, on_delete=django.db.models.deletion.CASCADE, to='messaging.message')),
            ],
            options={
                'verbose_name': 'Conversation Flag',
                'verbose_name_plural': 'Conversation Flags',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='latest_message',
            field=models.ForeignKey(blank=True, help_text='Cache of the most recent message for performance', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversation_latest', to='messaging.message'),
        ),
        migrations.CreateModel(
            name='MessageTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type', models.CharField(choices=[('initial_inquiry', 'Initial Property Inquiry'), ('ask_amenities', 'Ask About Amenities'), ('ask_availability', 'Check Availability'), ('ask_requirements', 'Ask About Requirements'), ('ask_neighborhood', 'Ask About Neighborhood'), ('ask_utilities', 'Ask About Utilities'), ('roommate_introduction', 'Roommate Introduction')], max_length=30, unique=True)),
                ('title', models.CharField(max_length=100)),
                ('title_es', models.CharField(blank=True, help_text='Spanish translation', max_length=100)),
                ('content', models.TextField(help_text='Use placeholders like {property_title}, {user_name}, {move_in_date}, etc.')),
                ('content_es', models.TextField(blank=True, help_text='Spanish translation')),
                ('variables', models.JSONField(default=list, help_text='List of variable names used in template')),
                ('show_for_property_types', models.JSONField(blank=True, default=list, help_text='Property types this template is relevant for')),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('order', models.IntegerField(default=0, help_text='Display order')),
                ('usage_count', models.IntegerField(default=0)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Message Template',
                'verbose_name_plural': 'Message Templates',
                'ordering': ['order', 'title'],
                'indexes': [models.Index(fields=['is_active', 'order'], name='messaging_m_is_acti_3c19dc_idx'), models.Index(fields=['template_type', 'is_active'], name='messaging_m_templat_dbed70_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'created_at'], name='messaging_m_convers_7bc91b_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', '-created_at'], name='messaging_m_sender__9b0bb2_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'read', '-created_at'], name='messaging_m_convers_617c01_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['conversation', 'sender', 'read'], name='messaging_m_convers_8359ac_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(condition=models.Q(('read', False)), fields=['read', 'delivered'], name='unread_messages_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['created_at'], name='messaging_m_created_d51bc4_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationflag',
            index=models.Index(fields=['status', '-created_at'], name='messaging_c_status_987cbe_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationflag',
            index=models.Index(fields=['conversation', 'status'], name='messaging_c_convers_95de24_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationflag',
            index=models.Index(fields=['flagged_by', '-created_at'], name='messaging_c_flagged_75b86e_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationflag',
            index=models.Index(condition=models.Q(('status', 'pending')), fields=['status'], name='pending_flags_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['-updated_at'], name='messaging_c_updated_666ea9_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['property', 'status'], name='messaging_c_propert_4c902c_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['status', '-created_at'], name='messaging_c_status_7698c3_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['property', '-updated_at'], name='messaging_c_propert_bfe013_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(condition=models.Q(('status', 'pending_response')), fields=['status'], name='pending_response_idx'),
        ),
        migrations.AddConstraint(
            model_name='conversation',
            constraint=models.UniqueConstraint(condition=models.Q(('property__isnull', False), ('status', 'active')), fields=('property',), name='unique_active_property_conversation'),
        ),
    ]
