services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next  # Optional but recommended for better hot reload
    depends_on:
      - backend
    environment:
      # Client-side (browser)
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
      - NEXT_PUBLIC_MEDIA_URL=http://localhost:8000/media
      - NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=${MAPBOX_TOKEN}
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
      
      # Server-side (Docker internal)
      - INTERNAL_API_URL=http://backend:8000/api
      - INTERNAL_MEDIA_URL=http://backend:8000/media
      - INTERNAL_WS_URL=ws://backend:8000/ws

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis  # Add Redis as a dependency
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/unihousing
      - DEBUG=True
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - SECRET_KEY=django-insecure-dev-key-change-in-production
      - REDIS_HOST=redis  # Add Redis host
      - REDIS_PORT=6379   # Add Redis port

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=unihousing
    ports:
      - "5432:5432"

  redis:  # New Redis service
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:  # Add Redis volume